# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../batterymgr.gni")

##############################unittest##########################################
ohos_unittest("test_batteryclient") {
  module_out_path = "${module_output_path}"
  defines = [ "GTEST" ]
  include_dirs = [
    "include",
    "${battery_manager_path}/test/utils",
  ]
  sources = [
    "${battery_manager_path}/test/utils/test_utils.cpp",
    "src/battery_client_test.cpp",
  ]

  configs = [
    "${battery_utils}:utils_config",
    "${battery_utils}:coverage_flags",
  ]

  deps = [
    "${battery_inner_api}:batterysrv_client",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("test_batteryclient_death") {
  module_out_path = "${module_output_path}"
  defines = [ "BATTERYMGR_DEATHRECIPIENT_UNITTEST" ]

  include_dirs = [
    "include",
    "${battery_manager_path}/test/utils",
  ]
  sources = [
    "${battery_manager_path}/test/utils/test_utils.cpp",
    "src/battery_client_death_recipient_test.cpp",
  ]

  configs = [
    "${battery_utils}:utils_config",
    "${battery_utils}:coverage_flags",
  ]

  deps = [
    "${battery_inner_api}:batterysrv_client",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}
